name: Flutter CI/CD
on:
  push:
    branches:
      - main
      - staging
  pull_request:
    branches:
      - "**"

jobs:
  validate:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || (github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging'))

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: batee5_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          cache: 'pip'

      - name: Install backend dependencies
        working-directory: ./backend
        run: pip install -r requirements.txt

      - name: Setup test database
        working-directory: ./backend
        run: flask setup-db
        env:
          FLASK_APP: app
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/batee5_test
          FLASK_ENV: testing

      - name: Start backend server
        working-directory: ./backend
        run: |
          python run.py & 
          echo "BACKEND_PID=$!" >> $GITHUB_ENV
          sleep 5
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/batee5_test
          FLASK_ENV: testing

      - name: Setup Flutter
        uses: subosito/flutter-action@v2.12.0
        with:
          flutter-version: '3.24.5'
          channel: stable
          
      - name: Install dependencies
        run: flutter pub get

      - name: Analyze code
        run: flutter analyze --no-fatal-infos --no-fatal-warnings

      - name: Run tests
        run: flutter test

      - name: Stop backend server
        if: always()
        run: |
          if [ ! -z "$BACKEND_PID" ]; then
            kill $BACKEND_PID || true
          fi

  deploy:
    needs: validate
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging')
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Install Railway CLI
        run: npm i -g @railway/cli

      - name: Setup Flutter
        uses: subosito/flutter-action@v2.12.0
        with:
          flutter-version: '3.24.5'
          channel: stable
          
      - name: Build Flutter Web
        run: |
          flutter pub get
          flutter build web --release
          
      - name: Deploy Frontend to Railway
        run: |
          mkdir -p deploy
          cp -r build/web/* deploy/
          cp Dockerfile deploy/
          cd deploy
          railway up --service frontend --detach
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
          
      - name: Deploy Backend to Railway
        working-directory: ./backend
        run: |
          echo "web: python run.py" > Procfile
          echo "FLASK_APP=app" > .env
          echo "FLASK_ENV=production" >> .env
          echo "python -c 'from app import create_app; from app.models import db; app=create_app(); app.app_context().push(); db.create_all()' && python run.py" > startup.sh
          chmod +x startup.sh
          echo "web: ./startup.sh" > Procfile
          railway up --service backend --detach
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
